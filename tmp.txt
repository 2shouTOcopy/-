#include <string>
#include <unordered_set>

/// 简单的“忽略列表”
/// invert_ = false 时：匹配列表中项 → 忽略；
/// invert_ = true  时：匹配列表中项 → 选中，忽略其他所有。
class IgnoreList {
public:
    explicit IgnoreList(bool invert = false)
        : invert_(invert) {}

    /// 添加一个条目
    void add(const std::string &item) {
        items_.insert(item);
    }
    /// 删除一个条目
    void remove(const std::string &item) {
        items_.erase(item);
    }
    /// 清空所有条目
    void clear() {
        items_.clear();
    }
    /// 设置是否反转匹配逻辑
    void setInvert(bool invert) {
        invert_ = invert;
    }
    /// 测试是否“匹配”（返回 true 则表示应该忽略/过滤这个条目）
    bool match(const std::string &item) const {
        bool found = (items_.count(item) > 0);
        return invert_ ? !found : found;
    }

private:
    std::unordered_set<std::string> items_;
    bool invert_;
};