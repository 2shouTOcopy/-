// df.h
#pragma once

#include "ModuleBase.h"
#include "IgnoreList.h"
#include <string>

class CDFModule final : public CAbstractUserModule {
public:
    CDFModule() = default;
    ~CDFModule() override = default;

    // 插件生命周期钩子
    int init() override;
    int config(const std::string &key, const std::string &value) override;
    int read() override;
    int shutdown() override;

private:
    void submitValue(const std::string &pluginInstance,
                     const std::string &type,
                     const std::string &typeInstance,
                     gauge_t value);

    IgnoreList il_device_{ true };
    IgnoreList il_mountpoint_{ true };
    IgnoreList il_fstype_{ true };
    IgnoreList il_errors_{ true };

    bool by_device_{ false };
    bool report_inodes_{ false };
    bool values_absolute_{ true };
    bool values_percentage_{ false };
    bool log_once_{ false };
};

// C 风格导出符
extern "C" {
    CAbstractUserModule* CreateModule();
    void DestroyModule(CAbstractUserModule *p);
}