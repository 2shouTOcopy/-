define pqueue
    if $argc == 0
        help pqueue
    else
        set $q = $arg0

        # deque iterators & block info (libstdc++)
        set $start   = $q.c._M_impl._M_start
        set $finish  = $q.c._M_impl._M_finish
        set $snode   = $start._M_node
        set $fnode   = $finish._M_node
        set $sfirst  = $start._M_first
        set $slast   = $start._M_last
        set $scur    = $start._M_cur
        set $block_sz = $slast - $sfirst

        # compute size w/o inlined size()
        if $snode == $fnode
            set $size = $finish._M_cur - $scur
        else
            set $full_nodes = $fnode - $snode - 1
            set $size = ($slast - $scur) + ($full_nodes * $block_sz) + ($finish._M_cur - $finish._M_first)
        end

        # decide how many to print
        if $argc >= 2
            set $to_print = ($arg1 < $size) ? $arg1 : $size
        else
            set $to_print = $size
        end

        # always先打印总大小，便于校验
        printf "Queue size = %ld\n", $size

        if $to_print > 0
            set $i = 0
            set $node = $snode
            set $cur  = $scur
            set $first = $sfirst
            set $last  = $slast

            while $i < $to_print
                if $node == $fnode
                    set $endcur = $finish._M_cur
                    while ($cur != $endcur) && ($i < $to_print)
                        printf "[%ld] = ", $i
                        p *$cur
                        set $cur++
                        set $i++
                    end
                    # 退出外层 while 的方式：让条件失效
                    set $i = $to_print
                else
                    while ($cur != $last) && ($i < $to_print)
                        printf "[%ld] = ", $i
                        p *$cur
                        set $cur++
                        set $i++
                    end
                    # 下一段
                    set $node++
                    set $first = *$node
                    set $cur   = $first
                    set $last  = $first + $block_sz
                end
            end

            printf "(printed %ld)\n", $to_print
        end
    end
end

document pqueue
    Prints std::queue<T> (libstdc++/deque) contents and size without calling inline size().
    Usage:
      pqueue <queue>             # print all elements
      pqueue <queue> <max>       # print at most <max> elements
    Example:
      pqueue m_schedSendQueue
      pqueue m_schedSendQueue 32
    Note: relies on libstdc++ deque internals; not for libc++.
end